# Copyright 2018 Red Hat, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Remove VPC used for OCP Cluster
---
- name: Register VPC to be terminated
  ec2_vpc_net_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    filters:
      "tag:env_id": "{{ env_id }}"
  register: destroy_vpc
  when:
    - operation == "absent"
    - delete_vpc

- name: Register Security Groups to be terminated
  ec2_group_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    filters:
      "tag:env_id": "{{ env_id }}"
  register: destroy_sgroups
  when:
    - operation == "absent"
    - delete_vpc

- name: Ensure VPC has no dependencies
  ec2_vpc:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ destroy_vpc.vpcs[0].id }}"
    state: "present"
    resource_tags: "{}"
    subnets: []
    internet_gateway: False
    route_tables: []
    wait: yes
  when:
    - operation == "absent"
    - delete_vpc

- name: Ensure Security Groups are removed
  ec2_group:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    state: "{{ operation }}"
    group_id: "{{ item.group_id }}"
  when:
    - operation == "absent"
    - delete_vpc
  with_items:
    - "{{ destroy_sgroups.security_groups }}"

- name: Ensure VPC is removed
  ec2_vpc_net:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    name: "{{ destroy_vpc.vpcs[0].tags.Name }}"
    cidr_block: "{{ destroy_vpc.vpcs[0].cidr_block }}"
    region: "{{ aws_region }}"
    state: "{{ operation }}"
    tags:
      env_id: "{{ env_id }}"
  when:
    - operation == "absent"
    - delete_vpc
