# Copyright 2018 Red Hat, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Create the Subnets use by the OCP cluster
---

- name: "Create Subnets for the VPC (HA Mode)"
  ec2_vpc_subnet:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    cidr: 172.31.{{ item }}.0/20
    region: "{{ aws_region }}"
    vpc_id: "{{ aws_vpc_id }}"
    map_public: yes
    az: "{{ aws_region }}{{ aws_region_az | default('a') }}"
    state: "present"
    tags:
      env_id: "{{ env_id }}"
  with_sequence: start=0 end=64 stride=16
  when: ha_mode
  register: new_subnets

- name: "Create Subnet for the VPC (Non HA Mode)"
  ec2_vpc_subnet:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    cidr: "{{ vpc_subnet_cidr | default('172.31.0.0/20') }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ aws_vpc_id }}"
    map_public: yes
    az: "{{ aws_region }}{{ aws_region_az | default('a') }}"
    state: "present"
    tags:
      env_id: "{{ env_id }}"
  when: not ha_mode
  register: new_subnets

- name: "Store away the (new) subnet id for use later"
  set_fact:
    aws_vpc_subnet_id: "{{ new_subnets.subnet.id }}"

- name: "Create Gateway subnet route table for the VPC"
  ec2_vpc_route_table:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_id: "{{ aws_vpc_id }}"
    region: "{{ aws_region }}"
    tags:
      Name: "{{ env_id }}-route-table-gw"
      env_id: "{{ env_id }}"
    subnets:
      - "{{ new_subnets.subnet.id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ aws_vpc_ig }}"

